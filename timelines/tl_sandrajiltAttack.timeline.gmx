<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<timeline>
  <entry>
    <step>0</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hero attacks Gob
if(monster[0].isDead &amp;&amp; monster[1].isDead &amp;&amp; monster[2].isDead)
{
    timeline_running = 0;
}
else
{
    do 
    {
        targetselect = irandom(2);
    }
    until(!monster[targetselect].isDead &amp;&amp; monster[targetselect].isActive)
    
    sprite_index = attack_sprite;
    image_index=0;
    image_speed = 0.4;
    battlebox("Attack");
    
    
    
    //timing corrections based on hero
    atkspeed = 30;
    atky = obj_battlegob.y;
    
    if (hero_pos == 0) 
    {
        atky += 100;
    }
    if (hero_pos == 1) 
    {
        atky -= 25;
        atkspeed = 22;
    }    
    
    battlevalue = irandom_range(strength - 3, strength + 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>13</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set speed of image to 0 and play attack sound
speed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>20</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hat thrown

instance_create(x, y, obj_sandrajiltHat_horizontal);

//movement towards Gob
with(obj_sandrajiltHat_horizontal)
{
    move_towards_point(monster[targetselect].x, monster[targetselect].y, 40);
}

audio_play_sound(attack_sfx,2,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>35</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move back hat to go back to Sandrajilt
with(obj_sandrajiltHat_horizontal)
{
    move_towards_point(obj_sandrajilt.x,obj_sandrajilt.y,40);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>36</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Monsters get hit, HP deducted
with(monster[targetselect])
{
    currenthp-= battlevalue;
    draw_battletext_outline(string(battlevalue),x,y,c_black,c_white);
    isSleeping = false;
        
    if(currenthp &gt; 0)
    {
        sprite_index = hurt_sprite;
        image_speed = stateSpeed;
        image_index = 0;
        audio_play_sound(hurt_sfx,1,0);
    }
    else
    {
        process_dead_character(monster[targetselect]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>43</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset original depth
depth = orig_depth;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>48</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy hat instance

with(obj_sandrajiltHat_horizontal)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>53</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Revert to idle state and check whether it's Gob's turn


with(obj_sandrajilt)
{
    sprite_index = idle_sprite;
    speed = 0;
    image_speed = stateSpeed;
    x = origin_x;
    y = origin_y;
    depth = orig_depth;
}

turn_end_handler();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
</timeline>
