<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<timeline>
  <entry>
    <step>0</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hero tries to inflict monster with sleep
if(monster[0].isDead &amp;&amp; monster[1].isDead &amp;&amp; monster[2].isDead)
{
    timeline_running = 0;
}
else
{
    if (creatureType == "hero")    
    {
        do 
        {
            targetselect = irandom(2);
        }
        until(!monster[targetselect].isDead &amp;&amp; monster[targetselect].isActive)
    }    
    
    if(actingObject.currentMP &lt; 6)
    {
        script_execute(turn_script);
    }
    else
    {
        currentMP -= 6;   
        clamp(currentMP, 0, maxMP) 
    }
    
    sprite_index = attack_sprite;
    
    if (creatureType = "monster")
    {
        battlebox("Goblin Dream Punch");
        instance_create(hero[targetselect].x, hero[targetselect].y, obj_sleepCast);
    }
    else
    {
        battlebox("Sleepy Fungus");
        instance_create(monster[targetselect].x, monster[targetselect].y, obj_sleepCast);
    }  
          
    if(irandom(10) &lt; 5)
    {
        battlevalue = 1;             
    }
    else
    {
       battlevalue = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>13</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set speed of image to 0 and play attack sound
speed = 0;
audio_play_sound(sfx_poison,2,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>16</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Monsters get hit, check if poison is successfully inflicted
if(battlevalue == 1)
{
    if (creatureType == "monster")
    {
        with(hero[targetselect])
        {
            draw_battletext_outline("Sleeping!",x,y-30,c_black,c_white)        
            sprite_index = hurt_sprite;
            image_index = 0;
            image_speed = 0.5;
            isSleeping = true;  
            sleepTurnCounter = 0; 
        }
    }
    else
    {
        with(monster[targetselect])
        {
            draw_battletext_outline("Sleeping!",x,y-30,c_black,c_white)        
            sprite_index = hurt_sprite;
            image_index = 0;
            image_speed = 0.5;
            isSleeping = true;   
            sleepTurnCounter = 0;
        }
    }    
}
else
{
    if (creatureType == "monster")
    {
        draw_battletext_outline("Miss",hero[targetselect].x,hero[targetselect].y-30,c_black,c_white);
    }
    else
    {
        draw_battletext_outline("Miss",monster[targetselect].x,monster[targetselect].y-30,c_black,c_white);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>23</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset original depth
depth = orig_depth;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>33</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Revert to idle state and check whether it's Gob's turn
sprite_index = idle_sprite;
speed = 0;
image_speed = stateSpeed;
x = origin_x;
y = origin_y;
depth = orig_depth;

turn_end_handler();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
</timeline>
