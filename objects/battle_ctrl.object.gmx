<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar hero; //list of heroes
globalvar myturn; //battle phase. 1 = select attack, 2 = select target, 3 = enemy turn
globalvar hero_group; //indicator which hero party
globalvar targetselect; //indicator for which hero to target
globalvar gobdead; //indicator if dead si Gob
globalvar deathprocess; //indicates if narun na yung death sequence
globalvar banterstate; //indicates if start battle or end battle banter
globalvar items; //array of items to give
globalvar itemsgiven; //queue of items na correctly typed
globalvar rqs; //rqs score
globalvar temprqs; //rqs temp score for gradual effect
globalvar taunted; //indicator if gob is taunted
globalvar taunter; //number of hero who taunted
globalvar critme; //indicator if gob is in hit me mode
globalvar battlevalue; //tempstorage of atk, heal, etc
globalvar critwindow; //indicates if pwede ka magtoggle ng crit
globalvar crithit; //indicates if nagcrit
globalvar critspaced; //if nagspace na this turn

randomize();
banterstate = 1;
gobdead = 0;
deathprocess = 0;
critspaced = 0;
crithit = 0;
critwindow = 0;
battlevalue = 0;
critme = 0;
taunted = 0;
taunter = 0;
rqs=50;
temprqs=50;
itemsgiven = ds_queue_create();
targetselect = 1;
hero_group = 1; //for now, isa lang hero group. (LOTA)
myturn = 0;
bantercounter = 0;
last_performance_errors = 0;
obj_pointer.visible = 0;
obj_attack.visible = 0;
obj_gobhp.visible = 0;
obj_herohp.visible = 0;
obj_rqs.visible = 0;




//generate heroes
if (hero_group == 1)
{
instance_create(928,160,obj_guyb);
hero[1] = obj_guyb;
instance_create(896,288,obj_tank);
hero[2] = obj_tank;
instance_create(960,448,obj_priest);
hero[3] = obj_priest;
hero[1].hero_pos = 1;
hero[2].hero_pos = 2;
hero[3].hero_pos = 3;
}

//assign items
items[1] = "potion";
items[2] = "tent";
items[3] = "sleeping bag";



//banter
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start battle
obj_pointer.visible = 1;
obj_attack.visible = 1;
obj_gobhp.visible = 1;
obj_herohp.visible = 1;
obj_rqs.visible = 1;
audio_play_sound(sfx_select,1,0);
myturn = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Battle banter
banterdone = 0;
banterinterval = 60;

draw_set_valign(fa_middle);
draw_set_halign(fa_left);

//start battle

if(banterstate ==1)
{
    switch(battlecount)
    {
        case 0:
            switch(bantercounter)
            {
                case 0:
                    quick_message(obj_tank,"A GOBLIN!!!!!!");
                    alarm[0] = banterinterval;
                    break;
                case 1: 
                    quick_message(obj_priest,"We're wasting our time 
                        #on a weak enemy like that.");
                    alarm[0] = banterinterval; 
                    break; 
                case 2:
                    quick_message(obj_guyb,"How dare you show yourself. 
                        #Prepare to die!");
                    alarm[0] = banterinterval; 
                    break;
                default:  
                    alarm[1] = 1;
                    break;
            }
            break;    
        case 1:
            switch(bantercounter)
            {
                case 0:
                    quick_message(obj_tank,"ARE YOU STRONG ENOUGH?");
                    alarm[0] = banterinterval;
                    break;
                case 1: 
                    quick_message(obj_priest,"Conserve our potions.");
                    alarm[0] = banterinterval; 
                    break; 
                case 2:
                    quick_message(obj_guyb,"In the name of the 
                        #king of Adventuria, I shall smite you!");
                    alarm[0] = banterinterval; 
                    break;
                default:  
                    alarm[1] = 1;
                    break;
            }
            break;    
        case 2:
            switch(bantercounter)
            {
                case 0:
                    quick_message(obj_tank,"Hey guys. Check out my 
                        #new skill called 'TAUNT'");
                    alarm[0] = banterinterval;
                    break;
                case 1: 
                    quick_message(obj_priest,"This should be interesting.");
                    alarm[0] = banterinterval; 
                    break; 
                case 2:
                    quick_message(obj_guyb,"No need for that. CHARGE!!!!");
                    alarm[0] = banterinterval; 
                    break;
                default:  
                    alarm[1] = 1;
                    break;
            }
            break;    
        case 3:
            switch(bantercounter)
            {
                case 0:
                    quick_message(obj_tank,"Didn't we just fought this guy before?");
                    alarm[0] = banterinterval;
                    break;
                case 1: 
                    quick_message(obj_priest,"Another cannon fodder.");
                    alarm[0] = banterinterval; 
                    break; 
                case 2:
                    quick_message(obj_guyb,"I can do this all day.");
                    alarm[0] = banterinterval; 
                    break;
                default:  
                    alarm[1] = 1;
                    break;
            }
            break;   
    }
    bantercounter+=1;
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Endgame Banter
if(banterstate ==2)
{

    if(battlecount == 1)
    {
        switch(bantercounter)
        {
            case 0:
                quick_message(obj_tank,"Dead? Harumph.");
                alarm[0] = banterinterval;
                break;
            case 1: 
                quick_message(obj_priest,"Not a single item drop...");
                alarm[0] = banterinterval; 
                break; 
            case 2:
                quick_message(obj_guyb,"The Legend of the Adventure #
                    continues!!!");
                alarm[0] = banterinterval; 
                break;
            case 3:
                fadeout();
                sound_fade(mus_peace,0,2000)
                alarm[0] = banterinterval; 
                break;
            default:
                    crit_enabled = 1;
                    with(obj_goblin)
                    {
                        visible = true;
                        image_xscale = 1;
                        sprite_index = spr_goblinFront;
                        x = 1016;
                        y = 1112;
                        free = true;
                        hspeed = 0;
                        vspeed = 0;
                    }
                    room_goto(cs_placement01);
        }//end of switch for first battle

        bantercounter+=1;
    }//end of battle 1 banter

    else

    if(battlecount == 2)
    {
        switch(bantercounter)
        {
          case 0:
            if last_performance_errors&lt;2
            quick_message(obj_guyb,"Oh yeah, my critical attacks 
                #hit the mark!");
            else
            quick_message(obj_guyb,"Not sure my crits are working...
                #Oh well.");
            alarm[0] = banterinterval;
            break;
          case 1:
            fadeout();
            sound_fade(mus_peace,0,2000)
            alarm[0] = banterinterval; 
            break;
          default:  
            taunt_enabled = 1;
            with(obj_goblin)
            {
                visible = true;
                image_xscale = 1;
                sprite_index = spr_goblinFront;
                x = 1016;
                y = 1112;
                free = true;
                hspeed = 0;
                vspeed = 0;
            }
            room_goto(cs_placement01);
        }
        //end of switch for battle 2

    bantercounter+=1;
    }//end of battle 2 banter
    
    else

    if(battlecount == 3)
    {
        switch(bantercounter)
        {
            case 0:
                if last_performance_errors&lt;2
                quick_message(obj_priest,"Hmmm, that taunt was pretty effective.");
                else
                quick_message(obj_priest,"Well that taunt sucks.");
                alarm[0] = banterinterval;
                break;
              case 1:
                if last_performance_errors&lt;2
                quick_message(obj_guyb,"Nah, forget that. 
                    #No need to protect me.");
                else
                quick_message(obj_guyb,"Doesn't matter. 
                    #I showed that goblin who's boss.");
                alarm[0] = banterinterval;
                break;
              case 2:
                quick_message(obj_tank,"...");
                alarm[0] = banterinterval;
                break;
              case 3:
                fadeout();
                sound_fade(mus_peace,0,2000)
                alarm[0] = banterinterval; 
                break;
              default:  
                items_enabled = 1;
                with(obj_goblin)
                {
                    visible = true;
                    image_xscale = 1;
                    sprite_index = spr_goblinFront;
                    x = 1016;
                    y = 1112;
                    free = true;
                    hspeed = 0;
                    vspeed = 0;
                }
                room_goto(cs_placement01);
        }//end of switch for battle 3

        bantercounter+=1;
    }//end of battle 3 banter

else

if(battlecount == 4)
{
    switch(bantercounter)
    {
      case 0:
        if last_performance_errors == 3
        quick_message(obj_guyb,"Wow! look at all this loot! 
            #Let's farm this guy more!");
        else if last_performance_errors == 0
        quick_message(obj_priest,"Still no item drops and just 10XP. 
            #What a waste of time");
        else
        quick_message(obj_guyb,"Pretty good drops. Onward!");
        alarm[0] = banterinterval;
        break;
      case 1:    
        break;
      case 2:    
        break;
      case 3:
        fadeout();
        sound_fade(mus_peace,0,2000)
        alarm[0] = banterinterval; 
        break;
      default:  
        break;
    }
    //end of switch for battle 4

bantercounter+=1;
}
//end of battle 4 banter



}//end of ending banter
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set background
battlecount = 0;
switch (battlecount)
{
    case 0:
        rm_battle_forest.background_index = bg_battle_iceDungeon;
        break;
    case 1:
        rm_battle_forest.background_index = bg_battle_iceDungeon;
        break;
    case 2:
        rm_battle_forest.background_index = bg_battle_desert;
        break;
    case 3:
        rm_battle_forest.background_index = bg_battle_undergroundDungeon;
        break;
    default:
        rm_battle_forest.background_index = bg_battle_forest;
        break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="116">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>mus_battle</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>mus_peace</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="10" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (myturn == 2)&amp;&amp;(targetselect=1){
audio_play_sound(sfx_scroll,3,0);
obj_pointer.x = 960-128;
obj_pointer.y = 448;
targetselect = 3;
}
else
if (myturn == 2)&amp;&amp;(targetselect=2){
audio_play_sound(sfx_scroll,3,0);
obj_pointer.x = 928-128;
obj_pointer.y = 160;
targetselect = 1;
}
else
if (myturn == 2)&amp;&amp;(targetselect=3){
audio_play_sound(sfx_scroll,3,0);
obj_pointer.x = 896-128;
obj_pointer.y = 320;
targetselect = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (myturn == 2)&amp;&amp;(targetselect=2){
audio_play_sound(sfx_scroll,3,0);
obj_pointer.x = 960-128;
obj_pointer.y = 448;
targetselect = 3;
}
else
if (myturn == 2)&amp;&amp;(targetselect=3){
audio_play_sound(sfx_scroll,3,0);
obj_pointer.x = 928-128;
obj_pointer.y = 160;
targetselect = 1;
}
else
if (myturn == 2)&amp;&amp;(targetselect=1){
audio_play_sound(sfx_scroll,3,0);
obj_pointer.x = 896-128;
obj_pointer.y = 320;
targetselect = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (myturn == 1){
audio_play_sound(sfx_select,3,0);
obj_pointer.x = 928-128;
obj_pointer.y = 160;
myturn = 2;
targetselect = 1;
obj_attack.visible = 0;

}

else
if (myturn == 2){
audio_play_sound(sfx_select,3,0);
obj_pointer.visible=0;
myturn = 3;


with(obj_battlegob){
timeline_index = turn_timeline;
timeline_position = 0;
timeline_running = 1;

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
