<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item_string = "";
enabled = 0;
gotxp=0;

alarm[0]=40;//start music
alarm[3] = 265;//end music
alarm[4] = 280;
if(items_enabled){
alarm[1]= 90;//start items
alarm[2] = 260;//end items
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>battle_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
battle_end();

/*fadeout();
sound_fade(mus_peace,0,2000)
alarm[6] = 60;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gotxp == 0){
battlebox("GOT 10XP");
gotxp=1;
alarm[4] = 25;
}
else if(!ds_queue_empty(itemsgiven)){
battlebox("GOT "+ ds_queue_dequeue(itemsgiven)); //got item
last_performance_errors++;
alarm[4] = 25;
}
else {
alarm[5] = 25; //end battle
}

//if(!ds_queue_empty(itemsgiven)){

//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(mus_peace,5,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_battletext_outline("STOP!",x,y,c_white,c_blue);
item_string = "";
enabled = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_battletext_outline("GIVE ITEMS!",x,y,c_white,c_blue);
enabled = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>mus_victory</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change hero sprites to victory sprites
for(i=0; i&lt;=2; i++)
{ 
    if (!hero[i].isDead)
    {
        hero[i].image_speed = 0.2;
        hero[i].sprite_index = hero[i].victory_sprite;
    }
}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(enabled)
{

if keyboard_check_pressed(ord('A')){
item_string = item_string + "A";
}
if keyboard_check_pressed(ord('B')){
item_string = item_string + "B";
}
if keyboard_check_pressed(ord('C')){
item_string = item_string + "C";
}
if keyboard_check_pressed(ord('D')){
item_string = item_string + "D";
}
if keyboard_check_pressed(ord('E')){
item_string = item_string + "E";
}
if keyboard_check_pressed(ord('F')){
item_string = item_string + "F";
}
if keyboard_check_pressed(ord('G')){
item_string = item_string + "G";
}
if keyboard_check_pressed(ord('H')){
item_string = item_string + "H";
}
if keyboard_check_pressed(ord('I')){
item_string = item_string + "I";
}
if keyboard_check_pressed(ord('J')){
item_string = item_string + "J";
}
if keyboard_check_pressed(ord('K')){
item_string = item_string + "K";
}
if keyboard_check_pressed(ord('L')){
item_string = item_string + "L";
}
if keyboard_check_pressed(ord('M')){
item_string = item_string + "M";
}
if keyboard_check_pressed(ord('N')){
item_string = item_string + "N";
}
if keyboard_check_pressed(ord('O')){
item_string = item_string + "O";
}
if keyboard_check_pressed(ord('P')){
item_string = item_string + "P";
}
if keyboard_check_pressed(ord('Q')){
item_string = item_string + "Q";
}
if keyboard_check_pressed(ord('R')){
item_string = item_string + "R";
}
if keyboard_check_pressed(ord('S')){
item_string = item_string + "S";
}
if keyboard_check_pressed(ord('T')){
item_string = item_string + "T";
}
if keyboard_check_pressed(ord('U')){
item_string = item_string + "U";
}
if keyboard_check_pressed(ord('V')){
item_string = item_string + "V";
}
if keyboard_check_pressed(ord('W')){
item_string = item_string + "W";
}
if keyboard_check_pressed(ord('X')){
item_string = item_string + "X";
}
if keyboard_check_pressed(ord('Y')){
item_string = item_string + "Y";
}
if keyboard_check_pressed(ord('Z')){
item_string = item_string + "Z";
}
if keyboard_check_pressed(vk_space){
item_string = item_string + " ";
}
if keyboard_check_pressed(vk_backspace){
item_string = string_delete(item_string,string_length(item_string),1);
}


}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(battle_text);
draw_set_color(c_black);
draw_text(x-100,y,item_string);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(enabled)
{

for (i = 1; i &lt;= 3; i += 1)
   {
   if(string_lower(item_string) == string_lower(items[i])){
   ds_queue_enqueue(itemsgiven,item_string);
   with(obj_battlegob){
   sprite_index = itemgive_sprite;
   current_item = obj_item_listener.item_string;
   image_index = 0;
   image_speed = 0.4;
   
   
   }
   items[i] = "";
   item_string = "";
   draw_battletext_outline("YUP",x,y,c_black,c_white);
   break;
   }
   }
   
if(item_string!=""){
draw_battletext_outline("NOPE",x,y,c_black,c_white);
item_string = "";
}



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
